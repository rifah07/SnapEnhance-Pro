name: Deploy SnapEnhance-Pro Backend

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  DOCKER_IMAGE: snapenhance-backend
  TEST_DB_NAME: snapenhance_test

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: testuser
          MONGO_INITDB_ROOT_PASSWORD: testpass
          MONGO_INITDB_DATABASE: ${{ env.TEST_DB_NAME }}
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pymongo pytest-mock

    - name: Build Docker image
      run: docker build -t $DOCKER_IMAGE .

    - name: Run tests
      env:
        MONGO_URI: "mongodb://testuser:testpass@localhost:27017/${{ env.TEST_DB_NAME }}?authSource=admin"
        SECRET_KEY: "test-secret-${{ github.run_id }}"
        JWT_ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        UPLOAD_FOLDER: "/tmp/test_uploads"
        PROCESSED_FOLDER: "/tmp/test_processed"
      run: |
        docker run --network host \
          -e MONGO_URI="$MONGO_URI" \
          -e SECRET_KEY="$SECRET_KEY" \
          -e JWT_ALGORITHM="$JWT_ALGORITHM" \
          -e ACCESS_TOKEN_EXPIRE_MINUTES="$ACCESS_TOKEN_EXPIRE_MINUTES" \
          -e UPLOAD_FOLDER="$UPLOAD_FOLDER" \
          -e PROCESSED_FOLDER="$PROCESSED_FOLDER" \
          $DOCKER_IMAGE sh -c "pytest -v --cov=app --cov-report=xml"

    - name: Upload coverage
      uses: codecov/codecov-action@v3

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Install Render CLI
        run: curl -sf https://render.com/downloads/render-cli/install.sh | bash

      - name: Deploy to Render
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render services deploy $RENDER_SERVICE_ID --api-key $RENDER_API_KEY